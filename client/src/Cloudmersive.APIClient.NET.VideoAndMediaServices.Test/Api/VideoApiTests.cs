/* 
 * videoapi
 *
 * The video APIs help you convert, encode, and transcode videos.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Cloudmersive.APIClient.NET.VideoAndMediaServices.Client;
using Cloudmersive.APIClient.NET.VideoAndMediaServices.Api;

namespace Cloudmersive.APIClient.NET.VideoAndMediaServices.Test
{
    /// <summary>
    ///  Class for testing VideoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class VideoApiTests
    {
        private VideoApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new VideoApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of VideoApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' VideoApi
            //Assert.IsInstanceOfType(typeof(VideoApi), instance, "instance is a VideoApi");
        }

        
        /// <summary>
        /// Test VideoConvertToGif
        /// </summary>
        [Test]
        public void VideoConvertToGifTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //string fileUrl = null;
            //int? maxWidth = null;
            //int? maxHeight = null;
            //bool? preserveAspectRatio = null;
            //int? frameRate = null;
            //bool? extendProcessingTime = null;
            //DateTime? startTime = null;
            //DateTime? timeSpan = null;
            //var response = instance.VideoConvertToGif(inputFile, fileUrl, maxWidth, maxHeight, preserveAspectRatio, frameRate, extendProcessingTime, startTime, timeSpan);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test VideoConvertToMov
        /// </summary>
        [Test]
        public void VideoConvertToMovTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //string fileUrl = null;
            //int? maxWidth = null;
            //int? maxHeight = null;
            //bool? preserveAspectRatio = null;
            //int? frameRate = null;
            //int? quality = null;
            //bool? extendProcessingTime = null;
            //var response = instance.VideoConvertToMov(inputFile, fileUrl, maxWidth, maxHeight, preserveAspectRatio, frameRate, quality, extendProcessingTime);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test VideoConvertToMp4
        /// </summary>
        [Test]
        public void VideoConvertToMp4Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //string fileUrl = null;
            //int? maxWidth = null;
            //int? maxHeight = null;
            //bool? preserveAspectRatio = null;
            //int? frameRate = null;
            //int? quality = null;
            //bool? extendProcessingTime = null;
            //var response = instance.VideoConvertToMp4(inputFile, fileUrl, maxWidth, maxHeight, preserveAspectRatio, frameRate, quality, extendProcessingTime);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test VideoConvertToWebm
        /// </summary>
        [Test]
        public void VideoConvertToWebmTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //string fileUrl = null;
            //int? maxWidth = null;
            //int? maxHeight = null;
            //bool? preserveAspectRatio = null;
            //int? frameRate = null;
            //int? quality = null;
            //bool? extendProcessingTime = null;
            //var response = instance.VideoConvertToWebm(inputFile, fileUrl, maxWidth, maxHeight, preserveAspectRatio, frameRate, quality, extendProcessingTime);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
        /// <summary>
        /// Test VideoGetInfo
        /// </summary>
        [Test]
        public void VideoGetInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream inputFile = null;
            //string fileUrl = null;
            //var response = instance.VideoGetInfo(inputFile, fileUrl);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        
    }

}
